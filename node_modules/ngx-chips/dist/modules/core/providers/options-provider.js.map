{"version":3,"file":"options-provider.js","sourceRoot":"","sources":["../../../../modules/core/providers/options-provider.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,EAAE,QAAQ,EAA4C,MAAM,gBAAgB,CAAC;AAWpF;IAAA;IAOA,CAAC;IAJU,oCAAU,GAAjB,UAAkB,OAAgB;QAC9B,eAAe,CAAC,QAAQ,CAAC,QAAQ,gBAAO,QAAQ,CAAC,QAAQ,EAAK,OAAO,CAAC,QAAQ,CAAC,CAAC;QAChF,eAAe,CAAC,QAAQ,CAAC,QAAQ,gBAAO,QAAQ,CAAC,QAAQ,EAAK,OAAO,CAAC,QAAQ,CAAC,CAAC;IACpF,CAAC;IACL,sBAAC;AAAD,CAAC,AAPD;;AACkB,wBAAQ,GAAG,QAAQ,CAAC","sourcesContent":["import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n}\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };"]}