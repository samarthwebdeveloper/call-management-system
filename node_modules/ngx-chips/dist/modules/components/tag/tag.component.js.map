{"version":3,"file":"tag.component.js","sourceRoot":"","sources":["../../../../modules/components/tag/tag.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core';\nimport { TagRipple } from '../tag';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst KeyboardEvent = (global as any).KeyboardEvent;\nconst MouseEvent = (global as any).MouseEvent;\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: 'tag',\n    templateUrl: './tag.template.html',\n    styleUrls: [ './tag-component.style.scss' ]\n})\nexport class TagComponent {    \n    /**\n     * @name model {TagModel}\n     */\n    @Input() public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input() public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input() public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input() public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input() public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input() public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input() public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input() public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name onSelect\n     * @type {EventEmitter<TagModel>}\n     */\n    @Output() public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @type {EventEmitter<TagModel>}\n     */\n    @Output() public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     * @type {EventEmitter<TagModel>}\n     */\n    @Output() public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     * @type {EventEmitter<any>}\n     */\n    @Output() public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     * @type {EventEmitter<any>}\n     */\n    @Output() public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    };\n\n    /**\n     * @name editing\n     * @type {boolean}\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     * @type {boolean}\n     */\n    @HostBinding('class.moving') public moving: boolean;\n\n    /**\n     * @name rippleState\n     * @type {string}\n     */\n    public rippleState = 'none';\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple) public ripple: TagRipple;\n\n    constructor(public element: ElementRef,\n                public renderer: Renderer2,\n                private cdRef: ChangeDetectorRef) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener('keydown', ['$event'])\n    public keydown(event: KeyboardEvent): void {\n        if (this.editing) {\n            event.keyCode === 13 ? this.disableEditMode(event) : undefined;\n            return;\n        }\n\n        this.onKeyDown.emit({event, model: this.model});\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('blink');\n\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        this.editing ? this.disableEditMode() : this.activateEditMode();\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n\t\tif (this.editable) {\n\t\t\tconst newValue: string = event.target.innerText;\n\t\t\tconst result = typeof this.model === 'string' ? newValue :\n\t\t\t\t{[this.identifyBy]: newValue, [this.displayBy]: newValue};\n\n            this.toggleEditMode();\n\n            this.onBlur.emit(result);\n\t\t}\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     * @returns {string}\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     * @returns {boolean}\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly &&\n            !this.editing &&\n            isChrome &&\n            this.hasRipple;\n    }\n\n    /**\n     * @name getContentEditableText\n     * @returns {string}\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : '';\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n         this.editing = true;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    private disableEditMode($event?: KeyboardEvent): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n        \n        this.editing = false;\n        classList.remove('tag--editing');\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (model: TagModel) => {\n            return typeof model === 'string' ?\n                model === input :\n                model[this.displayBy] === input;\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model) === false) {\n            const model = typeof this.model === 'string' ? input :\n                {[this.identifyBy]: input, [this.displayBy]: input};\n\n            // emit output\n            this.model = model;\n            this.onTagEdited.emit(model);\n        }\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     * @returns {boolean}\n     */\n    private isDeleteIconVisible(): boolean {\n        return !this.readonly &&\n                !this.disabled &&\n                this.removable &&\n                !this.editing;\n    }\n}\n"]}