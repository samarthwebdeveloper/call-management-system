import { TemplateRef, QueryList, EventEmitter } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/filter';
import { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';
import { TagModel } from '../../core';
import { TagInputComponent } from '../../components';
export declare class TagInputDropdown {
    private tagInput;
    dropdown: Ng2Dropdown;
    templates: QueryList<TemplateRef<any>>;
    offset: string;
    focusFirstElement: boolean;
    showDropdownIfEmpty: boolean;
    autocompleteObservable: (text: string) => Observable<any>;
    minimumTextLength: number;
    limitItemsTo: number;
    displayBy: string;
    identifyBy: string;
    matchingFn: (value: string, target: TagModel) => boolean;
    appendToBody: boolean;
    items: TagModel[];
    private _autocompleteItems;
    autocompleteItems: TagModel[];
    constructor(tagInput: TagInputComponent);
    ngOnInit(): void;
    updatePosition(): void;
    readonly isVisible: boolean;
    onHide(): EventEmitter<Ng2Dropdown>;
    onItemClicked(): EventEmitter<string>;
    readonly selectedItem: Ng2MenuItem;
    readonly state: any;
    show: () => void;
    scrollListener(): void;
    private calculatePosition();
    private requestAdding;
    private createTagModel(item);
    private getMatchingItems(value);
    private setItems(items);
    private resetItems;
    private populateItems(data);
    private getItemsFromObservable;
    private setLoadingState(state);
}
