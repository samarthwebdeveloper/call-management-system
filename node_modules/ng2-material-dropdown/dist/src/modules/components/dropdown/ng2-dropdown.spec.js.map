{"version":3,"file":"ng2-dropdown.spec.js","sourceRoot":"","sources":["../../../../../src/modules/components/dropdown/ng2-dropdown.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    ComponentFixture,\n    TestBed,\n    fakeAsync,\n    tick\n} from '@angular/core/testing';\n\nimport { Ng2Dropdown } from './ng2-dropdown';\n\nimport { By } from '@angular/platform-browser';\nimport { BrowserModule } from '@angular/platform-browser';\n\n// Load the implementations that should be tested\nimport { TestModule, BasicDropdown } from './test-helpers';\n\nfunction getComponent(fixture, component) {\n    fixture.detectChanges();\n    return fixture.debugElement.query(By.directive(component)).componentInstance;\n}\n\ndescribe('Ng2Dropdown', () => {\n    beforeEach(() => {\n        TestBed.configureTestingModule({\n            imports: [BrowserModule, TestModule]\n        });\n    });\n\n    describe('when the controller is instantiated', () => {\n        it('has its properties defined', () => {\n            const fixture: ComponentFixture<BasicDropdown> = TestBed.createComponent(BasicDropdown);\n            const component = getComponent(fixture, Ng2Dropdown);\n            expect(component.button).toBeDefined();\n            expect(component.menu).toBeDefined();\n            expect(component.menu.items.length).toEqual(2);\n            expect(component.state.menuState.isVisible).toBe(false);\n        });\n\n        it('shows/hides dropdown menu', () => {\n            const fixture: ComponentFixture<BasicDropdown> = TestBed.createComponent(BasicDropdown);\n            const component = getComponent(fixture, Ng2Dropdown);\n\n            component.button.toggleMenu();\n            expect(component.state.menuState.isVisible).toEqual(true);\n\n            component.button.toggleMenu();\n            expect(component.state.menuState.isVisible).toEqual(false);\n        });\n    });\n\n    describe('when using keyboard keys', () => {\n        let keyUp: Event = new Event('keyup');\n        let keyDown: Event = new Event('keydown');\n        let enter: Event = new Event('enter');\n        let tab: Event = new Event('tab');\n\n        keyUp['keyCode'] = 38;\n        keyDown['keyCode'] = 40;\n        enter['keyCode'] = 13;\n        tab['keyCode'] = 9;\n\n        it('goes through the dropdown items', fakeAsync(() => {\n            const fixture: ComponentFixture<BasicDropdown> = TestBed.createComponent(BasicDropdown);\n            const component = getComponent(fixture, Ng2Dropdown);\n\n            component.show();\n\n            fixture.detectChanges();\n            tick();\n\n            expect(component.state.dropdownState.selectedItem).toBe(component.menu.items.toArray()[0]);\n\n            component.menu.handleKeypress(keyDown);\n\n            fixture.detectChanges();\n            tick();\n\n            expect(component.state.dropdownState.selectedItem).toBe(component.menu.items.toArray()[1]);\n\n            component.menu.handleKeypress(keyUp);\n\n            expect(component.state.dropdownState.selectedItem).toBe(component.menu.items.toArray()[0]);\n\n            component.menu.handleKeypress(tab);\n            expect(component.state.dropdownState.selectedItem).toBe(component.menu.items.toArray()[1]);\n        }));\n\n        it('fires click event when pressing enter', fakeAsync(() => {\n            const fixture: ComponentFixture<BasicDropdown> = TestBed.createComponent(BasicDropdown);\n            const component = getComponent(fixture, Ng2Dropdown);\n\n            // show menu and press element with preventClose attribute set to true\n            component.show();\n\n            component.menu.handleKeypress(keyDown);\n            expect(component.state.dropdownState.selectedItem).toBe(component.menu.items.toArray()[1]);\n\n            // press enter\n            component.menu.handleKeypress(enter);\n\n            // menu is visible\n            expect(component.state.menuState.isVisible).toEqual(true);\n        }));\n    });\n});\n"]}