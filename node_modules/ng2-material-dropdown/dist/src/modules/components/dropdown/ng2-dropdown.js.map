{"version":3,"sources":["../../../../../src/modules/components/dropdown/ng2-dropdown.ts"],"names":[],"mappings":"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","file":"ng2-dropdown.js","sourceRoot":"","sourcesContent":["import {\n    HostListener,\n    Component,\n    ContentChild,\n    Output,\n    EventEmitter,\n    Input\n} from '@angular/core';\n\nimport { Ng2DropdownButton } from '../button/ng2-dropdown-button';\nimport { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n\nexport class Ng2Dropdown {\n    // get children components\n     public button: Ng2DropdownButton;\n     public menu: Ng2DropdownMenu;\n\n     public dynamicUpdate: boolean = true;\n\n    // outputs\n     public onItemClicked: EventEmitter<string> = new EventEmitter<string>();\n     public onItemSelected: EventEmitter<string> = new EventEmitter<string>();\n     public onShow: EventEmitter<Ng2Dropdown> = new EventEmitter<Ng2Dropdown>();\n     public onHide: EventEmitter<Ng2Dropdown> = new EventEmitter<Ng2Dropdown>();\n\n    constructor(private state: DropdownStateService) {}\n\n    /**\n     * @name toggleMenu\n     * @desc toggles menu visibility\n     */\n    public toggleMenu(position = this.button.getPosition()): void {\n        this.state.menuState.isVisible ? this.hide() : this.show(position);\n    }\n\n    /**\n     * - hides dropdown\n     * @name hide\n     */\n    public hide(): void {\n        this.menu.hide();\n        this.onHide.emit(this);\n    }\n\n    /**\n     * - shows dropdown\n     * @name show\n     * @param position\n     */\n    public show(position = this.button.getPosition()): void {\n        this.menu.show();\n\n        // update menu position based on its button's\n        this.menu.updatePosition(position);\n        this.onShow.emit(this);\n    }\n\n    /**\n     * @name scrollListener\n     */\n    \n    public scrollListener() {\n        if (this.state.menuState.isVisible && this.button && this.dynamicUpdate) {\n            this.menu.updatePosition(this.button.getPosition());\n        }\n    }\n\n    public ngOnInit() {\n        this.state.dropdownState.onItemClicked.subscribe(item => {\n            this.onItemClicked.emit(item);\n\n            if (item.preventClose) {\n                return;\n            }\n\n            this.hide.call(this);\n        });\n\n        if (this.button) {\n            this.button.onMenuToggled.subscribe(() => {\n                this.toggleMenu();\n            });\n        }\n\n        this.state.dropdownState.onItemSelected.subscribe(item => this.onItemSelected.emit(item));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ng2-dropdown',\n    templateUrl: './template.html',\n    providers: [ DropdownStateService ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DropdownStateService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'button': [{ type: ContentChild, args: [Ng2DropdownButton, ] },],\n'menu': [{ type: ContentChild, args: [Ng2DropdownMenu, ] },],\n'dynamicUpdate': [{ type: Input },],\n'onItemClicked': [{ type: Output },],\n'onItemSelected': [{ type: Output },],\n'onShow': [{ type: Output },],\n'onHide': [{ type: Output },],\n'scrollListener': [{ type: HostListener, args: ['window:scroll', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}